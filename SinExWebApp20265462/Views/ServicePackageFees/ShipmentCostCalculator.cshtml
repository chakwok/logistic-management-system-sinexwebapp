@model SinExWebApp20265462.ViewModels.CalculatorShipmentViewModel


@{
    ViewBag.Title = "Shipment Cost Calculator";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ShipmentCostCalculator", "ServicePackageFees", "FormMethod.Get"))
{
    <p class="text-danger">@ViewBag.StatusMessage</p>
    <hr />
    
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Origin, "Origin", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(a => a.Origin, Model.Destinations, new { @class = "form-control", style = "width: 150px;" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Destination, "Destination", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(a => a.Destination, Model.Destinations, new { @class = "form-control", style = "width: 150px;" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTypeID, "Service Type", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(a => a.ServiceTypeID, Model.ServiceTypes, new { @class = "form-control", style = "width: 150px;" })
            </div>
        </div>
    </div>
    <hr />

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfPackages, "Number of Packages", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(a => a.NumberOfPackages, new SelectList(
                    new List<Object>{
                    new { value=1,text="1" }, new { value=2,text="2" }, new { value=3,text="3" },
                    new { value=4,text="4" }, new { value=5,text="5" }, new { value=6,text="6" },
                    new { value=7,text="7" }, new { value=8,text="8" }, new { value=9,text="9" }, new { value=10,text="10" }
                },
                "value",
                "text",
                ViewBag.NumberOfPackages), new { @class = "form-control", style = "width: 150px;", onchange = "this.form.submit()" })
            </div>
        </div>
    </div>
    <hr />

    for (int i = 0, tmp = 1; i < 10; i++, tmp++)
    {
        if (i < ViewBag.NumberOfPackages)
        {
            <div id="packages" class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Packages[i], "Package " + tmp, htmlAttributes: new { @class = "col-md-offset-1" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Packages[i].PackageTypeSizeID, "Package Type", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(a => a.Packages[i].PackageTypeSizeID, Model.Packages[i].PackageTypeSizes, new { @class = "form-control", style = "width: 150px;" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Packages[i].Weight, "Weight", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(a => a.Packages[i].Weight, new { htmlAttributes = new { @class = "form-control", style = "width: 150px;" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Packages[i].PackageCost, "Package Cost", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DisplayFor(a => a.Packages[i].PackageCost)
                    </div>
                </div>
            </div>
            <hr />
        }
        else
        {
            <input type="hidden" name="@Html.NameFor(model => model.Packages[i].PackageTypeSizeID)" value=1 />
            <input type="hidden" name="@Html.NameFor(model => model.Packages[i].Weight)" value=0 />
        }
    }
    
    <input type="submit" value="Submit" class="btn btn-default col-md-offset-3"/>
    <hr />
    <div class="form-horizontal">
        <div class="form-horizontal">
        <div class="form-group">
            <label for="DisplayCurrency" class="col-md-3 control-label">Display currency in </label>
            <div class="col-md-9">
                @Html.DropDownListFor(a => a.CurrencyCode, Model.CurrencyCodes, new { @class = "form-control", style = "width: 150px;", onchange = "this.form.submit()" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShipmentCost, "Shipment Cost: ", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DisplayFor(model => model.ShipmentCost)
            </div>
        </div>
		</div>
	</div>
}
